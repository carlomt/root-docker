name: Docker Multiarch Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  docker_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: amd64
          - os: ubuntu-22.04-arm
            arch: arm64
    steps:
      env:
        USER: ${{ secrets.DOCKER_USERNAME }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set ROOT_VERSION environment variable
        run: echo "ROOT_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.USER}}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push the Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./ubuntu_from_source
          push: true
          tags: |
            ${{env.USER}}/root:latest-${{ matrix.arch }}
            ${{env.USER}}/root:${{ env.ROOT_VERSION }}-${{ matrix.arch }}
          platforms: linux/${{ matrix.arch }}


  docker_manifest:
    needs: docker_build
    runs-on: ubuntu-22.04
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.USER}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Create and push Docker manifest for "latest"
        run: |
          docker manifest create ${{env.USER}}/root:latest \
            ${{env.USER}}/root:amd64 \
            ${{env.USER}}/root:arm64
          docker manifest push ${{env.USER}}/root:latest
      - name: Create and push Docker manifest for versioned tag
        run: |
          docker manifest create ${{env.USER}}/root:${ROOT_VERSION} \
            ${{env.USER}}/root:${ROOT_VERSION}-amd64 \
            ${{env.USER}}/root:${ROOT_VERSION}-arm64
          docker manifest push ${{env.USER}}/root:${ROOT_VERSION}
